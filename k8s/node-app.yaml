apiVersion: v1
kind: Service
metadata:
  name: node-app-service
  namespace: prod
spec:
  selector:
    app: node-app
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: node-app-configmap
  namespace: prod
data:
  REDIS_HOST: redis-service.prod.svc.cluster.local
  REDIS_PORT: "6379"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-app
  namespace: prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node-app
  template:
    metadata:
      labels:
        app: node-app
    spec:
      volumes:
        - name: redis-cert-secret
          secret:
            secretName: redis-cert-secret
      initContainers:
        - name: wait-for-redis
          image: redis:alpine
          volumeMounts:
            - mountPath: /etc/redis/certs
              name: redis-cert-secret
          envFrom:
          - configMapRef:
              name: node-app-configmap    
          command: ["sh", "-c", "until redis-cli -h $REDIS_HOST -p 6379 --tls --cert /etc/redis/certs/tls.crt --key /etc/redis/certs/tls.key --cacert /etc/redis/certs/ca.crt ping; do sleep 0.5; done;"]
      containers:
      - name: node-app
        image: node-app:1.0.0
        ports:
        - containerPort: 3000
        envFrom:
        - configMapRef:
            name: node-app-configmap
        env:
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: node-app-configmap
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: node-app-configmap
              key: REDIS_PORT      
        volumeMounts:
          - mountPath: /etc/redis/certs
            name: redis-cert-secret